{"./":{"url":"./","title":"Introduction","keywords":"","body":"SMAGV-Autoware連携手順書 Rev. 作成日 R0.14 2020/11/19 来歴 Rev. 作成日 変更内容 R0.00 2019/08/23 新規作成 R0.01 2019/08/29 lane_planner仮追加 R0.02 2019/08/30 自動経路生成 仮追加 R0.03 2019/09/03 補足説明追加 R0.04 2019/09/24 waypoint上障害物の回避ルート算出設定の追加。スタイルシート変更。 R0.05 2019/10/01 waypoint_loader設定値追記 R0.06 2019/10/31 物体検出方法の追加 R0.07 2019/11/07 TF関連説明の追加 R0.08 2019/11/15 IMUセンサー関連追記 R0.09 2019/12/03 TFツリー構造見直し（仮対策） R0.10 2020/02/06 誤記訂正 R0.11 2020/07/14 thouzerのTF値追加、誤記訂正 R0.12 2020/08/24 Autoware 1.13.0項目（一部分のみ）追加 R0.13 2020/09/03 Logiee、Thouzer設定値 一部追加 R0.14 2020/11/19 NDTマッチング設定値 変更 R0.15 2021/01/21 センサフュージョンパラメタ修正 "},"src/md/chpt0000.html":{"url":"src/md/chpt0000.html","title":"はじめに","keywords":"","body":"はじめに 本書は、Synergic Mobility 無人搬送車（以下SMAGV）とAutowareを連携するための手順書である。 "},"src/md/chpt0100.html":{"url":"src/md/chpt0100.html","title":"1.概要","keywords":"","body":"1.概要 本書は、SMAGVとAutowareを連携するための以下の手順について説明する。 環境変数の設定 システムの起動 ROSBAGの取得 点群地図の作成 AGVの自己位置推定 経路設定ファイル作成 経路の自動走行 自動経路生成（駐車経路生成） 物体検出（点群からのクラスタリング） 物体検出（画像からのクラスタリング） 物体検出（センサフュージョン） 物体検出（クラスタトラッキング） lane_planner（調整中） センサキャリブレーション（調整中） "},"src/md/chpt0200.html":{"url":"src/md/chpt0200.html","title":"2.前提条件","keywords":"","body":"2.前提条件 前提条件を以下に示す。 必要な機器 必要なモジュールを以下に示す。 # 内容 条件 備考 1 SMAGV本体 必須 - 2 SMAGV制御用PC 必須 ubuntu 16.04以降 ※GPU搭載のものが望ましい 3 Velodyne 3D Lider 必須 本書ではセットアップ方法等については省略 必要なソフトウェア 必要なモジュールを以下に示す。 # 内容 条件 備考 1 SMAGV制御プログラム 必須 V3以降 2 ROS 必須 kinetic以降 3 Autoware 必須 1.10.0以降 ※未インストールの場合、事前にインストールをしておくこと。 ※本書では、Autowareに関する説明の部分でバージョン1.11.1を基本としている。ただし、一部その他のバージョンでの説明が混在している場合があるので適宜読み替えること。 参考書籍 Autoware 自動運転ソフトウェア入門 その他 本説明では、Autoware仕様との関連で、TFの定義においては以下のようなツリー構造をもったものとして説明する。 ・［world］─［map］ ・［base_link］─［･･･］ 以下のようなツリー構造ではない ・［world］─［map］─［odom］─［base_footprint］─［base_link］─［･･･］ ※base_linkの位置は、車軸中央ではなく、車軸直下の地面 "},"src/md/chpt0300.html":{"url":"src/md/chpt0300.html","title":"3.環境変数の設定","keywords":"","body":"3.環境変数の設定 Autoware連携に先立ち、事前に環境変数を設定する。 ※smagvビルド用（通常は、Autoware起動コマンド「run」内にて、同様のコマンドを発行しているので、たぶん不要） 設定済み確認 ターミナルで以下のコマンドを実行し、環境変数設定がされていることを確認する。 $ rospack list 結果に「autoware_xxx」があれば環境変数設定に問題はない。なければ、以下「環境変数の設定」を実施する。 環境変数の設定 $HOME/.bashrc ファイルを開き、以下のコマンドを追記する。 source ~/Autoware/ros/devel/setup.bash ← 1.10.0 の場合 source ~/Autoware/ros/install/setup.bash ← 1.11.0 以降の場合 【追記例】 $ gedit ~/.bashrc ← エディタ起動 編集後、保存してエディタを閉じる。その後、ターミナルから以下のコマンドを実行、またはPC再起動し、環境変数の取込みを行う。 $ source ~/.bashrc 処理終了後、前項に従い、設定済み確認を行う。 その他 特になし "},"src/md/chpt0400.html":{"url":"src/md/chpt0400.html","title":"4.システムの起動","keywords":"","body":"4.システムの起動 システムの起動方法を以下に示す。 Velodyneの起動 本書では、簡易的に説明する。詳細については、Velodyneマニュアル参照の事。 Velodyneと制御用PCをLANケーブルで接続し、電源を投入する。 回線未接続状態であることを確認する。（上図－wlan未接続時） アイコン右クリックで対象のデバイスから「切断する」を選択する。または以下コマンドを実行する。 ※eth名はPCによって異なる。SMAGVにはUSB-LANアダプタ（enx0090ccefc089）が接続されているのでその機器を使うことを推奨する。（ifconfigで機器名をチェックする） # enx0090ccefc089 : eth名（PCによって異なるので適宜調整する） $ nmcli device disconnect enx0090ccefc089 $ sudo ifconfig enp3s0f1 down だとうまく動かないときがある。 ターミナルで以下のコマンドを実行し、IPアドレス設定を行う。 # enx0090ccefc089 : eth名（PCによって異なるので適宜調整する） $ sudo ifconfig enx0090ccefc089 192.168.1.100 ← PC側IP Addr.設定 $ sudo route add 192.168.1.201 enx0090ccefc089 ← Velodneへのルート設定 SMAGVの起動 ターミナルで以下のコマンドを実行し、launchファイルを実行する。 $ roslaunch smagv_common test_start.launch ← 仮ファイル Autowareの起動 ターミナルで以下のコマンドを実行し、Autowareを実行する。 $ cd ~/Autoware/ros/ $ ./run その他 特になし "},"src/md/chpt0500.html":{"url":"src/md/chpt0500.html","title":"5.ROSBAGの取得","keywords":"","body":"5.ROSBAGの取得 ROSBAGファイル作成方法を種類ごとに以下に示す。 ROSBAG取得の際に、RVizを同時立上げしているとPCに大きな負荷がかかり、点群データ等に遅延が発生するため不確実なものとなる可能性がある。ROSBAG取得時はRVizを立上げないようにすること。 ターミナルコマンドによる取得 ターミナルコマンド指示による、ROSBAG取得方法の例を以下に示す。 ターミナルから「rosbag record」コマンドを実行し、ROSBAG取得を行う。 $ rosbag record -a # 全トピック $ rosbag record -a --split --duration=5m # 全トピック 5分毎分割 ※詳細は 「rosbag record --help」 参照 Ctrl+Cで終了 Autoware Runtime Managerによる取得 Autoware Runtime Managerによる、ROSBAG取得方法の例を以下に示す。 Autoware Runtime Managerウィンドウの［ROSBAG］ボタンを押下し、［ROSBAG Record］ウィンドウを表示する。 ファイル名、分割サイズ、取得トピックを適宜設定し［Start］ボタンを押下する。 ［Stop］ボタン押下で停止する。 "},"src/md/chpt0600.html":{"url":"src/md/chpt0600.html","title":"6.点群地図の作成","keywords":"","body":"6.点群地図（NDT MAP、PCD）の作成 Autowareによる点群地図作成方法（作成済のROSBAGからの生成）を以下に示す。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P113参照 事前準備 情報をクリアするため、Autowareを再起動する。 ROSBAG再生＆一時停止 ROSの時間をPCの時刻から、ROSBAG時刻に同期させるため、ROSBAG再生＆一時停止を行う。 Runtime Managerの［Simulation］タブを選択。 ［Ref］ボタン押下でROSBAGファイルを選択する。 ［Play］ボタン押下でROSBAGファイルを再生する。 再生後すぐに［Pause］ボタン押下でROSBAGファイル再生を一時停止する。 Baselink to Localizerの設定（任意） base_linkから見た、lider（points_raw）のTFを設定する。 点群地図作成時には必須ではないが、NDTマッチングが正常動作しないことある。ただし、NDTマッチングの際に本項目を設定することで対応が可能なため適宜設定する。 （NDTマッチングの際に本項目を設定するようにした方がよい！？） Runtime Managerの［Setup］タブを選択。 TF情報を入力する。 ［TF］ボタン押下で確定する。 押下後、ボタン色反転することを確認する。 TF情報参考値 # 機種 tf_x tf_z 備考 1 SMAGV（HDL32E設置時）（base_footprintあり） 0.255 0.836 base_footprintあり（base_linkが車軸中央） 2 ↑ ↑ 1.031 base_footprintなし（base_linkが地面） 3 SMAGV（VLP16設置時） 0.232 0.770 base_footprintあり（base_linkが車軸中央） 4 ↑ ↑ 0.965 base_footprintなし（base_linkが車軸直下の地面） 5 LogieeS-TC 0.74 0.32 － 6 Thouzer 0.535 0.91 － Vehicle Modelの設定（任意） RVizに表示するVehicle Modelを設定する。（表示が必要な場合のみ） （smagvの場合では現状、起動launchで発行しているので以下操作はたぶん不要。Logiee、Thouzerの場合は発行していないので適宜設定する。） Runtime Managerの［Setup］タブを選択。 Vehicle Modelグループ［Ref］ボタン押下でロボットモデルファイルを選択する。 Vehicle Modelグループ［Vehicle Model］ボタン押下で確定する。 押下後、ボタン色反転することを確認する。 ※smagvの場合は、urdf.xacroでロボットモデルを定義しているが、Autowareではxacroが（たぶん）使えないため、別途urdfファイルを作成する必要がある。 urdf.xacroから、urdfファイルを作成・チェックする例を以下に示す。 $ rosrun xacro xacro smagv.urdf.xacro --inorder >smagv.urdf $ check_urdf smagv.urdf NDT mappingの設定 NDT mappingの設定を行う。 Runtime Managerの［Computing］タブを選択。 ndt_map項目［app］押下でパラメタ設定画面を表示する。 ndt_mappingパラメタ項目を適宜設定する。（※入力内容を反映するため、設定項目ごとにenterキーを入力すること。） ［Close］ボタン押下で前画面に戻る。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P117参照 # 項目名 内容 単位 smagv妥当値 Logiee妥当値 Thouzer妥当値 1 Resolution 地図データをNDTのボクセルに変換する際のボクセル１辺の長さを指定。市街地では１m程度が妥当。 m 1 ← ← 2 Step Size マッチングの計算で、ノード内部では直線探索法によって繰り返し計算を行っている。その際のステップ幅を表す。 - 0.1 ← ← 3 Transformation Epsilon スキャンマッチングの繰り返し計算の収束条件を設定。 - 0.01 ← ← 4 Maximum Iteration 繰り返し計算における、最大の繰り返し数を表す。収束条件を満たさない場合は、この数値の回数だけ繰り返し計算を行ったら自動的に計算を打ち切る。 回 30 ← ← 5 Leaf Size スキャンデータのダウンサンプリングサイズ。 m 1 ← ← 6 Minimum Scan Range 特定の距離よりも近いスキャンポイントを無視する。（取り付けた車体をLiderが検知しないようにするため。） m 0.5 ← ← 7 Maximum Scan Range 特定の距離よりも遠いスキャンポイントを無視する。 ｍ 100 ← ← 8 Minimum Add Scan Shift Lider点群を地図として追加する頻度（移動距離）。0の場合はすべてのSCANデータ。（小さくすると処理が重くなる。） m 0.5～1.5 ← ← 9 Use Odometry MAP作成にオドメトリデータの利用有無を設定。（注： /vehicle/odomトピックを参照している。） - チェックあり チェックなし ← 10 Use IMU MAP作成にIMUセンサデータの利用有無を設定。 - チェックあり チェックなし ← 11 IMU topic IMUデータのトピック名を選択する。（クォータニオン（orientation）データがセットされていない「/imu/raw」データではたぶんダメ） - /imu/data － ← ※Odometryトピック名が「/vehicle/odom」でない場合、Use Odometryありにすると逆にズレることがあるので適宜調整する。 ndt_map項目チェックBOXをチェックありにする。 ［RViz］ボタン押下でRVizを起動する。 RVizの設定 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） その後、以下topic表示を追加する。 ［add］押下で追加トピック選択画面を表示する。 追加トピック選択画面の［by topic］タブを選択。 ［/ndt_map］トピックの［PointsCloud2］を選択する。 ［OK］ボタン押下で確定する。 ROSBAG一時停止からの再生 一時停止中のROSBAGを再生する。 Runtime Managerウィンドウから、［Simulation］タブを選択。 ［Pause］ボタン押下でROSBAGファイル再生を開始する。 NDTMAP作成の確認 RVizウィンドウに切り替え、点群地図が作成されていくことを確認する。 RViz表示の処理がだんだん重くなっていくので、前画面のROSBAG再生の終了を確認したらRVizを閉じる。（RVizを閉じても、NDTマップ作成の処理は継続している。） 別ターミナルウィンドウに、以下のようなNDTマップの作成状況が表示されているので、終了（分母分子が同じになる）するまで待つ。 --------------------------------------------------- （Processed/Input）:（xxxxx/〇〇〇〇） --------------------------------------------------- 点群地図の保存 ROSBAG再生終了後、作成した点群地図を保存する。 NDT mappingの設定を行う。 Runtime Managerの［Computing］タブを選択。 ndt_map項目［app］押下でパラメタ設定画面を表示する。 ［Ref］ボタン押下で点群地図ファイル（.pcd）を選択する。 フィルター（地図データをNDTのボクセルに変換する際のボクセル１辺の長さ）を指定する。（狭いエリアであれば「Original」選択でもよい。） ［PCD OUTPUT］ボタン押下でファイルを書き出す。 他のターミナルウィンドウに「Saved xxxxxx data points to xxxxxx.pcd.」を表示すれば保存完了。 その他 作成した地図は、作成を開始した箇所が原点となっている。 作成した地図を自己位置推定に使用する場合、［Map］タブ［TF］項目を設定する必要がある。 旋回動作や、スピードが速いとMAP生成でズレが発生することがあるため、旋回動作は少なく、ゆっくりのスピードで作成を行うこと。 ROSBAG取得の際に、RVizを同時立上げしているとPCに大きな負荷がかかり、点群データ等に遅延が発生するため不確実なものとなる可能性がある。ROSBAG取得時はRVizを立上げないようにすること。 "},"src/md/chpt0700.html":{"url":"src/md/chpt0700.html","title":"7.AGVの自己位置推定","keywords":"","body":"7.AGVの自己位置推定 Autowareによる自己位置推定方法（点群地図とのマッチング）を以下に示す。 事前準備 事前に、以下のいずれかを準備しておくこと。（多分これを一番最初にやらないと、うまく動作しない。） velodyne、SMAGVの起動 ROSBAG再生の一時停止 Baselink to Localizerの設定（任意） base_linkから見た、lider（points_raw）のTFを設定する。 点群地図作成時に、「Baselink to Localizer」を設定している場合、本設定は必須ではない。（たぶん） 点群地図作成時に、本項目を設定していない場合でも、本タイミングで設定することでマッチングが正常動作することがある。 詳細については、前章参照。 Vehicle Modelの設定（任意） RVizに表示するVehicle Modelを設定する。（表示が必要な場合のみ） 詳細については、前章参照。 Map関連情報の設定 マッチングに使う点群地図とTFの設定 Runtime Managerの［Map］タブを選択。 Point Cloudグループ［Ref］ボタン押下で点群地図ファイル（※1）を選択する。 Point Cloudグループ［Point Cloud］ボタン押下で確定する。 押下後、ボタン色反転することを確認する。 本章の以下TF部分は検討中。（現状、起動launchで発行しているので以下操作はたぶん不要） TFグループ［Ref］ボタン押下でTF設定ファイル（※2）を選択する。 TFグループ［TF］ボタン押下で確定する。 押下後、ボタン色反転することを確認する。 ※1 点群地図は、作成を開始した箇所が原点となっている。 ※2 点群地図を自己位置推定に使用する場合、［Map］タブ［TF］項目を設定する必要がある。 TF設定ファイルについて以下のものを用意している。通常は「4」を選択する。 # 種類 ファイル名 内容 1 WorldOdomTF smagv_tf_odom.launch ［world］～［odom］までのTFを設定 2 WorldFootprintTF smagv_tf_footprint.launch ［world］～［base_footprint］までのTFを設定 3 WorldBaselinkTF smagv_tf_baselink.launch ［world］～［base_link］までのTFを設定 4 TFすべて（base_link親フレームなし） smagv_tf_base_no_parent.launch base_linkの親フレームリンクを除くすべてのTFを設定（realsenseの詳細部分（camera_link）以下除く） 5 TFすべて smagv_tf_full.launch すべてのTFを設定（realsenseの詳細部分（camera_link）以下除く） ［base_link］配下のTFについては、smagv起動時のURDF内にも定義しているが、明示的に静的リンクをしないとセンサフュージョンでTFリンク切れエラーとなる。RVizのTF項目でWARNING表示の場合、RQTのTF tree表示で確認する。 # TF定義 Broadcaster 備考 1 URDF内 /robot_state_publisher 2 TF launch内 /base_link_to_camera_link（例） こっちが正しい ボクセルグリッドフィルタの設定 点群の密度を下げて、位置合わせ処理が膨大になることを防ぐための、ボクセルグリッドフィルタリングを行う。 Runtime Managerの［Sensing］タブを選択。 voxel_grid_filter項目［app］押下でパラメタ設定画面を表示する。 voxel_grid_filterパラメタ項目を適宜設定する。（※入力内容を反映するため、設定項目ごとにenterキーを入力すること。） ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Points Topic フィルタリング対象のトピック名。 - /points_raw 2 Voxel Leaf Size スキャンデータのダウンサンプリングサイズ。 m 0.3 3 Measuremest Range 測定範囲。 ｍ 200 voxel_grid_filter項目チェックBOXをチェックありにする。 NDTマッチングの設定 Runtime Managerの［Computing］タブを選択。 ndt_matching項目［app］押下でパラメタ設定画面を表示する。 voxel_grid_filterパラメタ項目を適宜設定する。（※入力内容を反映するため、設定項目ごとにenterキーを入力すること。） ［OK］ボタン押下で前画面に戻る。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P112参照 # 項目名 内容 単位 smagv妥当値 Logiee妥当値 Thouzer妥当値 1 Error Threshold エラーしきい値。 - 1 ← ← 2 Resolution 地図データをNDTのボクセルに変換する際のボクセル１辺の長さを指定。市街地では１m程度が妥当。 m 1（0.5） ← ← 3 Step Size マッチングの計算で、ノード内部では直線探索法によって繰り返し計算を行っている。その際のステップ幅を表す。 - 0.1（0.05） ← ← 4 Transformation Epsilon スキャンマッチングの繰り返し計算の収束条件を設定。 - 0.01 ← ← 5 Maximum Iteration 繰り返し計算における、最大の繰り返し数を表す。収束条件を満たさない場合は、この数値の回数だけ繰り返し計算を行ったら自動的に計算を打ち切る。 回 30 ← ← 6 Use Odometry マッチングにオドメトリデータの利用有無を設定。（注： /vehicle/odomトピックを参照している。） - チェックあり チェックなし ← 7 Use IMU マッチングにIMUセンサデータの利用有無を設定。 - チェックあり チェックなし ← 8 IMU topic IMUデータのトピック名を選択する。（クォータニオン（orientation）データのセットされているトピック。/imu/rawデータではたぶんダメ） - /imu/data － ← ※smagvはGPS未搭載のため、「Initial Pos」にする。 ※Odometryトピック名が「/vehicle/odom」でない場合、Use Odometryありにすると返ってズレることがあるので適宜調整する。 ※カッコ内の設定値は精度を上げたい場合に使用する。ただし、処理負荷が増大による自己位置を見失うことがあるので適宜調整する。 ndt_matching項目チェックBOXをチェックありにする※。 ［RViz］ボタン押下でRVizを起動する。 本項目にチェックを入れると、TFが変化する（Autowere側で［map］→［base_link］のTFを生成する）。 Autowareでは、［map］─［odom］間、および［odom］─［base_link］間のTFリンクを使わないため、odomフレームに対する静的TF（TF static）および動的TF（tf::TransformBroadcaster）は不要。ただし、オドメトリトピック（トピック名：/vehicle/odom）は必要。 現状、SMAGVの起動においては、［map］→［base_link］間のTFは生成しない構造にしている。 そのため、元々あった［odom］→［base_link］間のTFと重なり、mapマッチングがちらつくことになる。スタティックのTF設定では、［odom］［base_footprint］は定義しないようにする。（実際には/vehcle/odom） 変化前：［world］─［map］─［odom］─［base_footprint］─［base_link］─［･･･］ 変化後：［world］─［map］┬［odom］─［base_footprint］ └［base_link］─［･･･］ RVizの設定 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） その他 ROSBAG再生を一時停止している場合は、再生再開をする。 点群地図を表示してない場合、RViz［Points Map］項目のチェックをいったん外し、再度チェックする。 点群地図とのマッチングができていない（ずれた）場合、Runtime Manager［Computing］タブ、ndt_matching項目チェックのチェックをいったん外し、再度チェックありにすることで再度マッチングを行う。 変化後のTF Treeがおかしい場合、voxel_grid_filter設定「Points Topic」項目を確認する。 TFが変化していないと、マッチングが正常に動作しないのでRQTでTF treeを確認する。［map］ー［base_link］間のTFを「NDT matching」が発行（Broadcaster）していること。おかしくなっている場合は、再度最初から起動しなおした方が手っ取り早いかも...。 "},"src/md/chpt0800.html":{"url":"src/md/chpt0800.html","title":"8.経路設定ファイル作成","keywords":"","body":"8.経路設定ファイル作成 ROSBAGに取得した走行履歴をもとに経路設定（waypoint）ファイルの作成方法を以下に示す。 事前準備 事前に、以下の準備をしておくこと。 ・AGVの自己位置推定設定（※ROSBAG再生 ~ ROSBAG一時停止の再開直前まで） AGVの推定姿勢・速度算出の設定 AGVの推定姿勢・速度算出のため、｢vel_pose_connect｣を設定する。 Runtime Managerの［Computing］タブを選択。 vel_pose_connect項目［app］押下でパラメタ設定画面を表示する。 vel_pose_connectパラメタ項目を適宜設定する。（※設定内容はたぶん画面内容のままでよい。） ［OK］ボタン押下で前画面に戻る。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P158参照 vel_pose_connect項目チェックBOXをチェックありにする。 waypoint saverの設定 AGVの姿勢・速度をもとに、waypointファイルを作成するための設定をする。 Runtime Managerの［Computing］タブを選択。 waypoint_saver項目［app］押下でパラメタ設定画面を表示する。 waypoint_saverパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Save File 出力するwaypointファイル名。（新規ファイル名を設定すること。） - - 2 Input Type - - Vehicle･･･ 3 Save/current_velocity 速度保存可否を選択。チェックがない場合は0で保存される。 - チェックあり 4 Interval 何メートルおきにwaypointを保存するかを設定する。 m 0.5 waypoint_saver項目チェックBOXをチェックありにする。 ROSBAG再生の再開 一時停止しているROSBAG再生を再開をする。 RViz表示で、走行経路上にwaypointが、表示されていくことを確認する。 その他 動作完了後、指定したCSVファイルが作成されていることを確認する。 waypoint_saverはver3フォーマットの保存に対応している。 change_flagは基本的に0（直進)で保存されるので、レーンチェンジを行いたい場合は各自で編集する。（1なら右折、2なら左折） "},"src/md/chpt0900.html":{"url":"src/md/chpt0900.html","title":"9.経路の自動走行（障害物検知で停止）","keywords":"","body":"9.経路の自動走行（障害物検知で停止） 作成した経路設定（waypoint）ファイルに従い自動走行を行う方法を以下に示す。 本内容は、障害物検知した場合には、障害物の回避は行わなず、一定の距離で停止することを目的としている。 事前準備 事前に以下の準備をしておくこと。 準備1 Autoware関連launchファイルの設定を行う。 AGV本体（車体）を障害物として検知しないよう、センサーから距離（無視する半径）を設定する。 項目 内容 備考 ファイル名 velocity_set.launch ※ 格納先 ~/Autoware/ros/src/computing/planning/motion/packages/astar_planner/launch 1.10.0 〃 ~/autoware.ai/ros/install/waypoint_planner/share/waypoint_planner/launch 1.11.1 〃 ~/autoware.ai/install/waypoint_planner/share/waypoint_planner/launch 1.12.0、1.13.0 ※ 1.13.0 の場合は、その他「velocity_set_xxxx.launch」も同様に「remove_points_upto」項目の変更が必要。 変更内容 ↑ここの値を変更する（0.4くらいが妥当）(default:2.3) 上記 6行目の「remove_points_upto」の値を変更する。（点群データを無視する範囲（センサからの距離）、半径。） 設定した内容は、Runtime Manager［Computing］タブ－［velocity_set］項目のチェックBOXを「チェックあり」にした時に反映する。反映がうまくいかない場合は、Autowareの再起動を行う。 準備2 その他、以下の準備をしておくこと。 velodyne、SMAGVの起動。 AGVの自己位置推定設定。 AGVの推定姿勢・速度算出の設定 AGVの推定姿勢・速度算出のため、｢vel_pose_connect｣を設定し、チェックありにする。 詳細は前章参照のこと。 waypoint_loaderの設定 waypointファイルの読み込み設定をする。 Runtime Managerの［Computing］タブを選択。 waypoint_loader項目［app］押下でパラメタ設定画面を表示する。 waypoint_loaderパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 以下調整中 # 項目名 内容 単位 備考 1 load csv CSVファイル読込み有無。 - - 2 multi_lane 読み込むwaypointファイル。複数の入力ファイルを選択可能。 - - 3 replanning_mode 速度を再計画する場合はチェックする。 - - 4 realtime_tuning_mode waypointを調整する場合はチェックする。 5 resample_mode waypointをリサンプリングする場合はチェックする。resample_interval（更新間隔m）を設定する。 6 replan_curve_mode カーブで減速する場合はチェックする。 7 overwrite vmax mode すべてのwaypointの速度を上書きする場合はチェックする 8 replan endpoint mode 終点で減速する場合はチェックする。 9 Vmax 最大速度 10 Rth waypointで曲線を抽出するための半径のしきい値。これを増やすと、曲線をより頻繁に抽出する 11 Rmin、Vmin 速度の再計画に使用される値。※ 12 Accel limit 速度を制限するための加速値 13 Decel limit 速度を制限するための減速値 14 Velocity Offset 速度計画に先行するオフセット量です。 15 Braking Distance 制動距離 16 End Point Offset 終点オフセット前の最小速度の数です。 ※想定される最も鋭い曲線で速度を最小化するように設計された速度計画。 i番目の曲線では、最小半径r i と速度v i は次の式で表されます。 v i = Vmax-（Vmax-Vmin）/（Rth-Rmin） * _（Rth-r i ） waypoint_loader項目チェックBOXをチェックありにする。 ※壁ギリギリのルートや、往復経路の間隔が狭いと、velocity_setパラメタ［Detection Range］と干渉し、ルートが生成されないので注意。「Detection Range＋α」 の余裕を持たせること。 waypoint_planner（astar_planner）項目の設定 以下、waypoint_planner項目を設定する。（Autowareバージョンによっては、「astar_planner」となっている場合があるので読み替えのこと。） aster_avoid（obstacle_avoid）の設定 経路上の障害物に対して回避経路を生成するための設定をする。 以下、aster_avoid項目を設定する。（Autowareバージョンによっては、「obstacle_avoid」となっている場合があるので読み替えのこと。） Runtime Managerの［Computing］タブを選択。 aster_avoid項目［app］押下でパラメタ設定画面を表示する。 aster_avoidパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 備考 1 調整中 - ※参考URL https://gitlab.com/autowarefoundation/autoware.ai/core_planning/tree/master/waypoint_planner aster_avoid項目チェックBOXをチェックありにする。 velocity_setの設定 経路上の物体を検出し、最終的な速度を決定するための設定をする。 以下、velocity_set項目を設定する。 velocity_set項目［app］押下でパラメタ設定画面を表示する。 velocity_setパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P163参照 # 項目名 内容 単位 SMAGV妥当値 備考 1 Use Crosswalk Detection 横断歩道上の物体を検出するかどうかを選択する。 - - - 2 Enable Multiple Crosswalk Detection 複数の横断歩道を検出対象とするかどうかを選択する。 - - - 3 Points Topic 物体検出に利用する点群トピック名を指定する。 - points_raw ※ 4 Enable Planner dynamical switch waypointを動的に書き換えるかどうかを指定する。 - - 1.10.0 5 Stop Distance for Obstacle 経路上の物体を検知した際の前方障害物までの停止距離を指定する。 m 2 1未満危険 6 Stop Distance for Stopline 経路上の停止線までの停止距離を指定する。 m 5 - 7 Detection Range 経路上の物体を検出して停止する際の検出範囲を指定する。 m 0.5 0.5未満だと旋回時ぶつかる 8 Deceleration Range 経路上の物体を検出して減速する際の検出範囲を指定する。 m ０ - 9 Points Threshold 経路上の物体を検出する際の点の数のしきい値を指定する。この値以上の点が検出範囲内にあれば物体を検出する。 個 5 - 10 Detection Height Top 検出する点群の高さの上限を指定する。高さは点群の検出に用いているセンサからの距離。 m 0.2 - 11 Detection Height Bottom 検出する点群の高さの下限を指定する。 m -1.0 - 12 Deceleration for Obstacle 物体を検出して停止・減速する際の減速度を指定する。 m/s^2 0.7 - 13 Deceleration for Stopline 停止線を検出して停止・減速する際の減速度を指定する。 m/s^2 0.3 - 14 Velocity Change Limit 現在速度と目標速度の差がこの値より大きくならないようにする。急ブレーキを回避するためのパラメタ。 km/h 7 - 15 Temporal Waypoint Size 次のノードに渡すためにPublishするwaypointの数を指定する。 個 100 - ※groundトピックの発行設定（10.経路の自動走行．準備2）を行っている場合、［points_no_ground］でもOK velocity_set項目チェックBOXをチェックありにする。 waypoint_follower項目の設定 以下、waypoint_follower項目を設定する。（Autowareバージョンによっては、項目の位置が異なる場合がある。） pure_pursuitの設定 自己位置から目標位置までの曲率（滑らかなカーブにする）を求めるためのアルゴリズムの設定をする。 自己位置と経路上の目標点を通る円の曲率を計算 計算した曲率と現在速度から目標角速度を計算し、トピックとしてpublish 以下、pure_pursuit項目を設定する。 Runtime Managerの［Computing］タブを選択 pure_pursuit項目［app］押下でパラメタ設定画面を表示する pure_pursuitパラメタ項目を適宜設定する ［OK］ボタン押下で前画面に戻る ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P177,179,180参照 # 項目名 内容 waypoint Dialog 単位 smagv妥当値 1 Waypoint 目標速度をwaypointファイルに定義されている速度から取得する。（通常はこちらを使用する） 〇 - 〇 2 Dialog Velocityパラメタから取得する。（この項目を選択すると、障害物を検知しても、停止しない） 〇 - - 3 Velocity 目標速度（固定値）。ターゲットボールの移動速度。 〇 km/h - 4 Lookahead Distance 目標点までの距離（固定値）。ターゲットボールまでの距離。 〇 m 1.0~2.0 5 lookahead_ratio 目標点を決めるパラメタ。その速度で何秒先に到達する位置を目標点とするかを表す。 〇 秒 2.0~2.5 6 minimumlookahead distance 目標点までの距離の最低値。（短いと動きがカクカクし、長くするとゴール手前で止まる距離も長くなる） 〇 m 0.5~1.0 pure_pursuit項目チェックBOXをチェックありにする。 twist_filterの設定 自己位置から目標位置までの曲率を求めるためのアルゴリズムの設定をする。 目標速度、角速度から想定される横加速度を計算 横加速度が一定値を超える場合は目標速度を減速し、トピックとしてpublish 以下、twist_filter項目を設定する。 Runtime Managerの［Computing］タブを選択。 twist_filter項目［app］押下でパラメタ設定画面を表示する。 twist_filterパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P177参照 # 項目名 内容 単位 smagv妥当値 1 lateral_accel_limit 横加速度（m/s^2）の許容範囲。 m/s^2 ？ 2 lowpass_gain_linear_x 目標並進速度に対するローパスフィルタのゲイン。縦速度の許容範囲を表す。 ？ 3 lowpass_gain_angular_z 目標角速度に対するローパスフィルタのゲイン。横回転速度の許容範囲を表す。 ？ twist_filter項目チェックBOXをチェックありにする。 lane_planner項目の設定 以下、lane_planner項目を設定する。 lane_rule項目チェックBOXをチェックありにする。 lane_stop項目チェックBOXをチェックありにする。 lane_select項目チェックBOXをチェックありにする。 トピックの確認 Runtime Managerの［Topics］タブを選択し、［/vehicle_cmd］トピックがPublishされていることを確認する。 （echoありで、linear、angularのデータが変化していることを確認する） SMAGVの自動運転切り替え Bluetoothゲームパッドの［Y］ボタン押下で自動走行モードに切り替え、AGVが自動走行することを確認する。 Bluetoothゲームパッドボタンによる走行モード切替え ボタン 走行モード 内容 有効トピック Ｘ 手動走行（ゲームパッド） Bluetoothゲームパッドの左スティックによる手動制御へ切替える。 /smagv/vehicle_cmd、/smagv/cmd_vel Ｙ 自動走行 Autowareからのトピックによる命令、またはrosからのトピックによる命令へ切替える。 /vehicle_cmd 、 /cmd_vel Ｂ 手動走行（JWスティック） アカデミックパック本体設置のジョイスティックによる制御へ切替える。 - Ａ＋左スティック押込み 緊急停止 アカデミック電源Off。押込みをやめると電源を復帰する。電源復帰後は、手動走行（ゲームパッド）モードになる。 - その他 特になし "},"src/md/chpt1000.html":{"url":"src/md/chpt1000.html","title":"10.経路の自動走行（障害物回避）","keywords":"","body":"10.経路の自動走行（障害物回避） 作成した経路設定（waypoint）ファイルに従い自動走行を行う方法を以下に示す。 本内容は、障害物検知した場合には、ゴールまでの障害物回避ルートを検索する。回避ルートが見つからない場合は一定の距離で停止することを目的としている。 事前準備 事前に以下の準備をしておくこと。 準備1 Autoware関連launchファイルの設定 ・velocity_set 障害物として検知しない距離の設定を行う。（無視する半径） AGV本体（車体）を障害物として検知しないよう設定する。 項目 内容 備考 ファイル名 velocity_set.launch - 格納先 ~/Autoware/ros/install/waypoint_planner/share/waypoint_planner/launch 1.11.1 〃 ~/Autoware/ros/src/computing/planning/motion/packages/astar_planner/launch 1.10.0 変更内容については前章参照の事。 ・aster_aviod 障害物検知時の回避ルート検索の設定を行う。 項目 内容 備考 ファイル名 aster_avoid.launch（obstacle_avoid.launch） - 格納先 ~/Autoware/ros/install/waypoint_planner/share/waypoint_planner/launch 1.11.1 〃 ~/Autoware/ros/src/computing/planning/motion/packages/astar_planner/launch 1.10.0 変更内容 ↑ smagv 0.890＊1.3＝1.157 （defaulf:4.5） ↑ smagv 0.430 velocity_set(Detection Range)＊2＝1.000（defaulf:1.75） ↑ smagv 0.338＊1.3＝0.439 （defaulf:4.5） ↑ smagv 回転直径1.35m 半径を設定すると動作不安定のため直径設定（調整中） （defaulf:4.5） ： # 種類 項目 内容 単位 SMAGV妥当値 備考 1 検索方法 use_potential_heuristic costmapに車体がかからないようにするサーチ方法 - true 2 ↑ use_wavefront_heuristic 波面サーチ - false 3 ロボット緒元 robot_length 車体長さ m 1.157 ※ 4 ↑ robot_width 車幅 m 1.000 ※ 5 ↑ robot_base2back 車体後端からのbase_linkの距離 m 0.439 ※ 6 ↑ minimum_turning_radius 最小旋回半径 m 1.35 ※ 7 ルート検索設定 use_back 後退するルートの検索可否 - false 8 ↑ theta_size リルート時最大舵角 度 48 9 ↑ curve_weight 未使用 - 1.2 10 ↑ reverse_weight - 2.00 11 ↑ lateral_goal_range 横方向の目標範囲 m 0.2 12 ↑ longitudinal_goal_range 縦方向の目標範囲 m 0.3 13 ↑ angle_goal_range 角度目標範囲 度 6.0 14 ↑ obstacle_threshold 障害物認識のしきい値 - 100 15 ↑ potential_weight costの嵩上げ（乗数） - 10.0 16 ↑ distance_heuristic_weight 障害物との距離計算時の比重（乗数）（小さくすると余裕間隔が増える?） - 1.00 ※実際のロボットのサイズより大きくすることで、リルート時に障害物との間隔を確保する。特に車幅に関しては転回することも考慮し、velocity_set－「Detection Range」項目と合わせて設定すること。 設定した内容は、Runtime Manager［Computing］タブ－［aster_aviod］項目のチェックBOXを「チェックあり」にした時に反映する。反映がうまくいかない場合は、Autowareの再起動を行う。 準備2 その他、以下の準備をしておくこと。 velodyne、SMAGVの起動。 AGVの自己位置推定設定。 groundトピックの発行設定 地面（points_ground）と地面以外（points_no_ground）を判断するためのトピックを発行する。 以下のいずれかを実施する。（どちらが良いかは？「ray_ground_filter」の方が精度が高い？） ring_ground_filter 点群のリング形状のものを地面として検出する方法？ 設定値は調整中。 # 項目 内容 SMAGV妥当値 Logiee妥当値 Thouzer妥当値 1 input_points_topic 入力トピック名 /points_raw ← ← 2 Sensor Model センサーモデル 16 ← ← 3 Sensor Height センサー高さ 0.965 0.32 0.91 4 Max Slope 5 Vertical Thres ray_ground_filter 放射状の同心円を地面として検出する方法？ 設定値は調整中。 # 項目 内容 SMAGV妥当値 Logiee妥当値 Thouzer妥当値 1 input_points_topic 入力トピック名 /points_raw ← ← 3 Sensor Height センサー高さ 0.965 0.32 0.91 2 Clipping Height 有効高さ 0.2 4 min_point_distance 最小有効距離 0.4 5 AGVの推定姿勢・速度算出の設定 AGVの推定姿勢・速度算出のため、｢vel_pose_connect｣を設定し、チェックありにする。 詳細は前章参照のこと。 waypoint_loaderの設定 waypointファイルの読み込み設定をする。 詳細は前章参照のこと。 waypoint_loaderパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 waypoint_loader項目チェックBOXをチェックありにする。 costmapの設定と確認 costmap_generatorの設定 障害物を検出するための設定をする。 以下、costmap_generator項目を設定する。 costmap_generator項目［app］押下でパラメタ設定画面を表示する。 costmap_generatorパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 　 パラメタには以降の章で説明する物体検出データを利用する。どの物体検出データを利用するかは適宜検討の事。 # 項目名 内容 単位 SMAGV妥当値 備考 1 use_object_box チェックあり - 2 use_points チェックあり ※ 3 objects_input 任意 ※ 4 points_input /points_no_ground 5 lide_frame /velodyne 6 map_frame /map 7 その他検討中 ※チェックありの場合は以下のいずれかを選択 章12.点群からのクラスタリングオブジェクト（/detection/lidar_detector/objects）（処理が軽いのでお勧め） 章13.画像からのクラスタリングオブジェクト（/detection/image_detector/objects） 章14.センサフュージョンオブジェクト（/detection/fusion_tools/objects） 章15.クラスタトラッキングオブジェクト（/detection/object_tracker/objects） costmap_generator項目チェックBOXをチェックありにする。 costmapの確認 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） Occupancy Grid Map項目の表示トピックを「/semantics/costmap_generator/occupancy_grid」に変更する。 RViz右フレームにcosmapが表示されることを確認する。 waypoint_planner（astar_planner）項目の設定 以下、waypoint_planner項目を設定する。（Autowareバージョンによっては、「astar_planner」となっている場合があるので読み替えのこと。） aster_avoid（obstacle_avoid）の設定 経路上の障害物に対して回避経路を生成するための設定をする。 ・aster_avoid項目［app］押下でパラメタ設定画面を表示する。 「Enable Avoidance」をチェックありにする。 「Costmap Topic」を「semantics/costmap_generator/occupancy_grid」にする。 その他のパラメタについては前章参照の事。 ［OK］ボタン押下で前画面に戻る。 aster_avoid項目チェックBOXをチェックありにする。 velocity_setの設定 経路上の物体を検出し、最終的な速度を決定するための設定をする。 velocity_set項目［app］押下でパラメタ設定画面を表示する。 「Points Topic」を「/points_no_ground」にする。 その他のパラメタについては前章参照の事 ［OK］ボタン押下で前画面に戻る。 velocity_set項目チェックBOXをチェックありにする。 waypoint_follower項目の設定 以下、waypoint_follower項目を設定する。（Autowareバージョンによっては、項目の位置が異なる場合がある。） pure_pursuitの設定 自己位置から目標位置までの曲率（滑らかなカーブにする）を求めるためのアルゴリズムの設定をする。詳細は前章参照のこと。 pure_pursuit項目［app］押下でパラメタ設定画面を表示する。 pure_pursuitパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 pure_pursuit項目チェックBOXをチェックありにする。 twist_filterの設定 自己位置から目標位置までの曲率を求めるためのアルゴリズムの設定をする。詳細は前章参照のこと。 twist_filter項目［app］押下でパラメタ設定画面を表示する。 twist_filterパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 twist_filter項目チェックBOXをチェックありにする。 lane_planner項目の設定 以下、lane_planner項目を設定する。 lane_rule項目チェックBOXをチェックありにする。 lane_stop項目チェックBOXをチェックありにする。 lane_select項目チェックBOXをチェックありにする。 障害物回避ルートの確認 waypointルート上に障害物を設置したとき、回避ルートが生成されることを確認する。 別ターミナルウィンドウに「 [ERROR] [xxxxxxxxxxxxx.xxxxxxxxxxx]: Can't find goal... 」を表示していない事を確認する。 SMAGVの自動運転切り替え 別ターミナルウィンドウに「 [ERROR] [xxxxxxxxxxxxx.xxxxxxxxxxx]: Can't find goal... 」を表示していない場合は、Bluetoothゲームパッドの［Y］ボタン押下で自動走行モードに切り替え、AGVが自動走行することを確認する。 ※走行中に回避ルートを見失った場合、障害物を考慮せずwaypointに従い走行するので、常に非常停止できる準備をしておくこと その他 別ターミナルウィンドウに「[ERROR] [xxxxxxxxxxxxx.xxxxxxxxxxx]: Can't find goal...」を表示している場合や、車体が停止する場合は、以下の原因が考えられる。 # 原因 対策 1 車体が通過できる物理的なスペースがない。 車体が通過できるスペースを確保する。 2 Lider設置高さと障害物の高さの影響によるもの。 障害物の高さをLider設置高さ以上にする。 3 velocity_set－「Detection Range」項目の範囲内に障害物がある。 velocity_set－「Detection Range」設定値の見直し。 4 ↑ aster_avoid.launch（obstacle_avoid.launch）のロボット緒元に係る項目の見直し。 5 costmapの障害物認識サイズの粗密が妥当でない。 costmap_generator項目－「grid_resolution」設定値の見直し 6 costmap算出に係る所要時間による遅延（処理が重い）。 costmap_generator項目－「grid_length_x」「grid_length_y」設定値の見直し。cosmap全体のサイズを小さくすることで検索範囲を狭める。 "},"src/md/chpt1100.html":{"url":"src/md/chpt1100.html","title":"11.自動経路生成（駐車経路生成）","keywords":"","body":"11.自動経路生成（駐車経路生成） Autowareによる自動経路生成（駐車経路生成）方法を以下に示す。 作業前の情報を初期化するため、念のためAutowareを再起動する。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P164参照 事前準備 事前に以下の準備をしておくこと。 準備1 velodyneモジュールの変更 「Autoware 自動運転ソフトウェア入門」では、「points2vscan」機能により「/scan」トピックを生成しているが、本書では、velodyneの機能により「/scan」トピックをパブリッシュする手順とする。ただし、一部velodyneモジュールの変更を行う。 ※北陽Liderセンサーと併用すると制御が不安定になるので、排他使用を推奨。北陽Liderセンサーによる「/scan」トピックについての説明については省略する。（ name_space 、その他駆使すれば可能と思うが煩雑になるので...） 変更概要 velodyneモジュールは、pointsトピックの他に「/scan」トピックもパブリッシュしている。ただし、pointsトピック名が「velodyne_points」の場合に限り、「/scan」トピックに有効データがセットされる仕様である。Autowareでは、固定のトピック名「points_raw」で機能を実現している部分もあり、現状では設定が煩雑化するため、トピック名「points_raw」の場合に「/scan」トピックに有効データをセットするよう変更する。 （ただし、北陽Liderセンサーを利用する場合は、この限りではない。） ソース修正 項目 内容 備考 格納フォルダ ~/catkin_ws/src/velodyne/velodyne_laserscan/src/ - ファイル名 velodyne_laserscan.cpp 57行目 void VelodyneLaserScan::connectCb() { boost::lock_guard lock(connect_mutex_); if (!pub_.getNumSubscribers()) { sub_.shutdown(); } else if (!sub_) { sub_ = nh_.subscribe(\"velodyne_points\", 10, &VelodyneLaserScan::recvCallback, this); ↑ここを ｢velodyne_points｣ → ｢points_raw｣に変更 } } ビルド ソース修正後ビルドを行う。 準備2 Autoware関連launchファイルの変更 AGV本体（車体）の緒元を設定する。 項目 内容 備考 ファイル名 astar_navi.launch - 格納先 ~/Autoware/ros/install/freespace_planner/share/freespace_planner/launch 1.11.1 〃 ~/Autoware/ros/src/computing/planning/mission/packages/freespace_planner/launch 1.10.0 変更内容（設定内容については現在調整中（バージョンごとで内容が異なる）） ※複数行コメントや日本語を使用すると、取込みエラーになることがあるので使用しないこと 準備3 その他、以下の準備をしておくこと。 velodyne、SMAGVの起動。 AGVの自己位置推定設定。 コストマップの生成 レーザスキャン情報からコストマップを生成する。 laserscan2costmap項目の設定をする。 Runtime Managerの［Computing］タブを選択。 laserscan2costmap項目［app］押下でパラメタ設定画面を表示する。 laserscan2costmapパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Resolution 解像度 0.05 2 scan_size_x 1000 3 scan_size_y 1000 4 map_size_x 500 5 map_size_y 500 6 scan_topic Laser Scanトピック名 - /scan 7 sensor_frame センサフレーム名（urdf、TF定義名を設定する） - /velodyne（veodyne） /base_2d_laser（北陽） laserscan2costmap項目チェックBOXをチェックありにする。 RVizの設定 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） その後、以下topic表示を追加する。 ［add］押下で追加トピック選択画面を表示する。 追加トピック選択画面の［by topic］タブを選択。 ［/scan］トピックの［LaserScan］を選択する。 ［OK］ボタン押下で確定する。 LaserScan表示がされていることを確認する。（points_rawと表示色が似ているので、適宜調整する） Occupancy Grid Map項目の表示トピックを［/ring_ogm］に変更する。 右フレームにcosmapが表示されることを確認する。（velodyneと北陽Liderを併用していると、costmapを表示しないので、Liderは排他使用にする。） 経路生成 経路を生成するための設定を行う。 astar_navi項目の設定をする。 Runtime Managerの［Computing］タブを選択。 astar_navi項目［app］押下でパラメタ設定画面を表示する。 astar_naviパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Use Reverse Motion 車庫入れ時の切り返し経路生成 有無 - 2 Waypoint Velocity 速度 km/h 3 Update Rate 更新間隔 Hz 4 costmap topic costmapのトピック名 - ring_ogm astar_navi項目チェックBOXをチェックありにする。 lane_rule項目チェックBOXをチェックありにする。 lane_stop項目チェックBOXをチェックありにする。 lane_select項目チェックBOXをチェックありにする。 vel_pose_connect項目チェックBOXをチェックありにする。 aster_avoid項目チェックBOXをチェックありにする。 velocity_set項目チェックBOXをチェックありにする。 pure_pursuit項目チェックBOXをチェックありにする。 twist_filter項目チェックBOXをチェックありにする。 ゴール位置指定 Rviz表示に切り替え、ゴール位置を指定する。 Rvizツールバーの［2D Nav Goal］に押下する。 右フレーム（マップフレーム）にマウスでゴール位置を設定する（カーソルをゴール地点にし、左クリック。左クリックしたままの状態で、マウスを移動し向きを指定する。その後、マウス左ボタンを離す。） waypointが、地図上に表示されることを確認する。（agv本体を移動しないと表示しない場合があるのでその場合は、少し移動してみる） SMAGVの自動運転切り替え Bluetoothゲームパッドの［Y］ボタン押下で自動走行モードに切り替え、AGVが自動走行することを確認する。 その他 特になし "},"src/md/chpt1200.html":{"url":"src/md/chpt1200.html","title":"12.物体検出（点群からのクラスタリング）","keywords":"","body":"12.物体検出（点群からのクラスタリング） 点群を使った物体検出方法を以下に示す。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P121参照 事前準備 事前に以下の準備をしておくこと。 準備1 groundトピックの発行設定を行う。（以下いずれかをチェックする。） 内容については、10章参照のこと。 準備2 以下のいずれかを準備しておくこと。 velodyne、SMAGVの起動 ROSBAG再生の一時停止 点群クラスタの生成 レーザスキャン情報からクラスタを生成する。 lider_euclidean_cluster_detect項目の設定をする。 Runtime Managerの［Computing］タブを選択。 lider_euclidean_cluster_detect項目［app］押下でパラメタ設定画面を表示する。 lider_euclidean_cluster_detectパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 use_gpu GPU使用 有無 - チェックあり 2 output_frame フレーム名 - velodyne 3 pose_estimation 姿勢推定の有無？ - チェックあり 4 map_size_x ポイントデータの間引き 有無？ - チェックなし 5 input_points_node Laser Scanトピック名 - /points_no_ground 6 Leaf Size スキャンデータのダウンサンプリングサイズ。 m 0.1 7 調整中 lider_euclidean_cluster_detect項目チェックBOXをチェックありにする。 RVizの設定 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） そのままでは、Points_rawトピックとPoints_clusterトピックが同時に表示されており、判別しづらいのでPoints_rawトピックを非表示にする。 クラスタリング表示がされていることを確認する。 点群に各クラスタを示す色が表示される。同じ色の部分が同じクラスタに属しており、1つの物体として検出される。 その他 ROSBAG再生を一時停止している場合は、再生再開をする。 正しく表示しない場合、RVizの［Displays］ウィンドウ－［Global Options］－［Fixed Frame］を見直す。 "},"src/md/chpt1300.html":{"url":"src/md/chpt1300.html","title":"13.物体検出（画像からのクラスタリング）","keywords":"","body":"13.物体検出（画像からのクラスタリング） 画像を使った物体検出方法を以下に示す。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P124参照 事前準備 事前に以下の準備をしておくこと。 準備1 YOLO（You Look Only Onse「リアルタイムオブジェクト検出アルゴリズム」）パラメタのダウンロードを行う。 darknet 共通ファイルのダウンロード モジュール本体も同時にダウンロードされるが、本書では、Autoware 内のモジュールを使用するため、パラメタのみ利用する。 $ cd $ git clone https://github.com/pjreddie/darknet.git 学習済みのウェイト（パラメータ）ファイルのダウンロード $ cd ~/darknet/data $ wget http://pjreddie.com/media/files/yolov2.weights ← YOLO V2用 $ wget http://pjreddie.com/media/files/yolov3.weights ← YOLO V3用 準備2 以下のいずれかを準備しておくこと。 velodyne、SMAGVの起動 ROSBAG再生の一時停止 物体検出アルゴリズムの起動 以下のいずれかを行う。（通常は予測率の高い「YOLO v3」でよい） SSDの起動 vision_ssd_detect項目の設定をする。 内容は省略 YOLO v2の起動 vision_darknet_yolo2項目の設定をする。 Runtime Managerの［Computing］タブを選択。 vision_darknet_yolo2項目［app］押下でパラメタ設定画面を表示する。 vision_darknet_yolo2パラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Score Threshold 一致スコアしきい値？ - 2 NMS Threshold 非最大抑制しきい値（Non-maximum supression threshold） - 3 image_src 画像データのトピック名 - /camera/color/image_raw 4 network･･･(cfg) アルゴリズム起動パラメタファイル - $HOME/darknet/cfg/yolov2.cfg 5 pre･･･(weight) 学習済みのウェイト（パラメータ）ファイル - $HOME/darknet/data/yolov2.weight 6 names･･･(names) 検出オブジェクト名定義ファイル - $HOME/darknet/data/coco.names 7 gpu_device_id vision_darknet_yolo2項目チェックBOXをチェックありにする。 YOLO v3の起動 vision_darknet_yolo3項目の設定をする。 Runtime Managerの［Computing］タブを選択。 vision_darknet_yolo3項目［app］押下でパラメタ設定画面を表示する。 vision_darknet_yolo3パラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Score Threshold 一致スコアしきい値？ - 2 NMS Threshold 非最大抑制しきい値（Non-maximum supression threshold） - 3 image_src 画像データのトピック名 - /camera/color/image_raw 4 network･･･(cfg) アルゴリズム起動パラメタファイル - $HOME/darknet/cfg/yolov3.cfg 5 pre･･･(weight) 学習済みのウェイト（パラメータ）ファイル - $HOME/darknet/data/yolov3.weight 6 names･･･(names) 検出オブジェクト名定義ファイル - $HOME/darknet/data/coco.names 7 gpu_device_id vision_darknet_yolo3項目チェックBOXをチェックありにする。 CUDAメモリオーバによるエラーが発生する場合は「yolov3.cfg」ファイルを以下変更することで回避できる。変更後は、vision_darknet_yolo3項目チェックBOXをチェックをいったん外し、再度チェックありにする。 [net] # Testing # batch=1 # subdivisions=1 # Training batch=64 ← 32 に変更 ダメなら1にする subdivisions=16 ← 32 に変更 ダメなら1にする width=608 ← 416に変更 height=608 ← 416に変更 channels=3 momentum=0.9 decay=0.0005 angle=0 ： ： RVizの設定（イメージビューアパネルの表示） RVizを起動する。 RViz起動後、「メニュー」－［Panels］－［Add New Panel］を選択し、パネル選択ダイアログを表示する。 パネル種類「Image Viewer Plugin」を選択する。 ［OK］ボタン押下で前画面に戻る。 追加したパネルのウィンドウ境界辺りをマウスクリックし、そのまま上へドラッグし画像表示部分を見えるようにする。 画面のプルダウンメニューから以下を選択する。（rosbag再生一時停止の場合、選択項目が見つからないことがあるので、いったん一時停止を解除し、再度一時停止する。） # 項目名 内容 smagv妥当値 1 Image Topic 画像データトピック名 /camera/color/image_raw 2 Object Rect Topic 矩形オブジェクトトピック名 /detection/image_detector/objects 認識結果の確認 認識結果の種類と矩形が表示されることを確認する。 その他 ROSBAG再生を一時停止している場合は、再生再開をする。 "},"src/md/chpt1400.html":{"url":"src/md/chpt1400.html","title":"14.物体検出（センサフュージョン）","keywords":"","body":"14.物体検出（センサフュージョン） キャリブレーションパラメタによるセンサフュージョンを行う。（点群、画像連携による障害物検出） ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P133参照 事前準備 事前に以下の準備をしておくこと。 準備1 センサキャリブレーション センサキャリブレーションによる、パラメタの作成を行う。（付録2参照） groundトピックの発行 groundトピックの発行設定を行う。（以下いずれかをチェックする。） 内容については、10章参照のこと。 準備2 以下のいずれかを準備しておくこと。 velodyne、SMAGVの起動 ROSBAG再生の一時停止 キャリブレーションパブリッシャの起動 calibration_publisher項目の設定をする。 Runtime Managerの［Sensing］タブを選択。 calibration_publisherボタン押下でパラメタ設定画面を表示する。 calibration_publisherパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 Camera ID 画像データID - /camera/color 2 target_frame 点群データフレーム名 - velodyne 3 camera_frame 画像データフレーム名 - /camera_color_frame 4 - キャリブレーションパラメタpath - /hoge/YYYYMMDDHHMMSS_autoware lider_camera_calibration_yaml 5 register TF ･･･ - チェックあり 6 publish extrinsic ･･･ - チェックあり 7 publish camera ･･･ - チェックあり 8 camera_info_topic_name - /camera_info 9 image_topic_source - /camera/color/image_raw 10 projection_matrix_topic - /projection_matrix ? ※処理途中で本項目を再度設定した場合は、後述の「range_vision_fusion」項目に影響するため、range_vision_fusion項目も再設定、起動を行うこと。 点群クラスタの起動 点群クラスタと起動する。 物体検出アルゴリズムの起動 以下のいずれかを起動する。内容については、13章参照のこと。 SSD YOLO v2 YOLO v3 range_vision_fusionの起動 range_vision_fusion項目の設定をする。 Runtime Managerの［Computing］タブを選択。 range_vision_fusion項目［app］押下でパラメタ設定画面を表示する。 range_vision_fusionパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 detected_objects_range 物体検出（点群）トピック名 - /detection/lider_detector/objects 2 detected_objects_vision 物体検出（画像）トピック名 - /detection/image_detector/objects 3 camera_info_src - /camera/color/camera_info 4 調整中 - range_vision_fusion項目チェックBOXをチェックありにする。 RVizの設定 RViz起動後、defaultのRViz設定ファイルを開く。（~/Autoware/ros/src/.config/rviz/default.rviz） その後、以下設定を行う。 Image Viewer Pluginパネルの表示 Image Viewer PluginパネルをRViz上に表示する。 内容については、13章参照のこと。 画面のプルダウンメニューから以下を選択する。（rosbag再生一時停止の場合、選択項目が見つからないことがあるので、いったん一時停止を解除し、再度一時停止する。） # 項目名 内容 smagv妥当値 1 Image Topic 画像データトピック名 /camera/color/image_raw 2 Object Rect Topic 矩形オブジェクトトピック名 /detection/fusion_tools/objects 表示重なりトピックの非表示 RViz上に表示が重なっていて見づらくしているPoints Rawトピックを非表示にする。 内容については、13章参照のこと。 センサフュージョン検出マーカーの表示 センサフュージョン検出マーカーの表示設定を行う。 マーカー表示「Detection Range」項目の「Marker Topic」のプルダウンメニューから「/detection/fusion_tools/objects_markers」を選択する。 認識結果の確認 認識結果の種類、矩形、マーカー、距離等が表示されることを確認する。 その他 ROSBAG再生を一時停止している場合は、再生再開をする。 正しく表示しないとき 正しく表示しない場合、以下を実施しすることで改善する場合がある。 RVizの［Displays］ウィンドウ－［Global Options］－［Fixed Frame］を見直す。 URDFによるTF定義では、Lider⇔カメラのTFリンクが辿れなくなる（ような動作になっている）。明示的にTFを定義し直すこと。（NDT matchingと同時利用する場合は、再起動した方が手っ取り早いかも...） 以下仮対策 種類 仮対策方法 備考 rosbag再生によるシミュレーション時 rosbagを停止（一時停止でない）し、初めから再生する。 - roslaunch実行による実機稼働時 roslaunchを停止し、再度roslaunchを実行する。 - ・TFのツリー構造見直しで対応可能かも...あとで検討する。 "},"src/md/chpt1500.html":{"url":"src/md/chpt1500.html","title":"15.物体検出（クラスタトラッキング）","keywords":"","body":"15.物体検出（クラスタトラッキング） 物体認識のみでは、時間フレーム毎に認識を行うので、時間フレーム毎に結果が変動してしまう。そこで物体ごとにIDを与え、時間変化をしても同じ物体を認識し続けるトラッキングを行う必要がある。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P136参照 事前準備 章14.物体検出（センサフュージョン）を行う。 ROSBAG再生の場合は一時停止しておく。 imm_ukf_pda_trackの起動 imm_ukf_pda_track項目の設定をする。 Runtime Managerの［Computing］タブを選択。 imm_ukf_pda_track項目［app］押下でパラメタ設定画面を表示する。 imm_ukf_pda_trackパラメタ項目を適宜設定する。 ［OK］ボタン押下で前画面に戻る。 # 項目名 内容 単位 smagv妥当値 1 input topic 入力トピック名 - /detection/fusion_tools/objects 2 output topic 出力トピック名 - /detection/object_tracker/objects 3 調整中 - range_vision_fusion項目チェックBOXをチェックありにする。 RVizの設定 表示しているRVizの表示topicを変更する。 Image Viewer Pluginパネルの表示 画面のプルダウンメニューから以下を選択する。（rosbag再生一時停止の場合、選択項目が見つからないことがあるので、いったん一時停止を解除し、再度一時停止する。） # 項目名 内容 smagv妥当値 1 Image Topic 画像データトピック名 /camera/color/image_raw 2 Object Rect Topic 矩形オブジェクトトピック名 /detection/object_tracker/objects クラスタトラッキング検出マーカーの表示 クラスタトラッキング検出マーカーの表示設定を行う。 マーカー表示「Detection Range」項目の「Marker Topic」のプルダウンメニューから「/detection/object_tracker/objects_markers」を選択する。 認識結果の確認 認識結果にIDが付与され表示することを確認する。 その他 ROSBAG再生を一時停止している場合は、再生再開をする。 正しく表示しないとき 正しく表示しない場合、以下を実施しすることで改善する場合がある。 RVizの［Displays］ウィンドウ－［Global Options］－［Fixed Frame］を見直す。 rosbagを停止（一時停止でない）し、初めから再生する。 "},"src/md/chptfr01.html":{"url":"src/md/chptfr01.html","title":"付録1.lane_planner（調整中）","keywords":"","body":"付録1.lane_planner（調整中） ベクターマップ用定義？ lane_rule # 項目名 内容 単位 smagv妥当値 1 Accelerarion 停止線やカーブで加速・減速する際の加速度を指定する。（カーブ周辺のwaypointの速度が変化する） m/s^2 ？ 2 Stopline Search Radius 経路上で停止線を探索する半径を指定する。 m ？ 3 Number of Zero Ahead 停止線の前に置く速度0のwaypointの数を指定する。 個 ？ 4 Number of Zero Behind 停止線の後ろに置く速度0のwaypointの数を指定する。 個 ？ 5 number_of_smoothing_count 速度を修正するwaypointの数を指定する。 個 ？ lane_select https://autoware.readthedocs.io/en/feature-documentation_rtd/DevelopersGuide/PackagesAPI/mission/lane_planner.html # 項目名 内容 単位 smagv妥当値 1 Distance threshold to neighbor lanes 現在経路の周りの有効な車線を検出する際のしきい値を表す。このしきい値より遠い距離にある車線は車線として認識しない。 m ？ 2 Lane Change Interval After Lane merge 車線変更を行ったあとに何メートル走ったらまた車線変更を行えるようになるかの値を表す。 m ？ 3 Lane Change Target Ratio 車線変更を行う予定の車線上の目標点を速度(m/s)に比例した距離で定義する際に使用する値。 目標点探索の起点は車線変更予定の車線上の点において、右折or左折の車線変更フラグを持つ点の最近傍点。 ？ 4 Lane Change Target Minimum 車線変更を行う予定の車線上の目標点までの最低距離を表す。 目標点探索の起点は車線変更予定の車線上の点において、右折or左折の車線変更フラグを持つ点の最近傍点。 m ？ 5 Vector Length of Hermite Curve 曲線補間に使用しているエルミート曲線（始点と終点を滑らかに結ぶ曲線）のベクトルの大きさを指定する。 m ？ 6 Enable Planner dynamical switch waypointを動的に書き換えるかどうかを指定する。 - - "},"src/md/chptfr02.html":{"url":"src/md/chptfr02.html","title":"付録2.センサキャリブレーション（調整中）","keywords":"","body":"付録2.センサキャリブレーション（調整中） センサキャリブレーションとは、2つ以上のセンサのお互いの位置関係（外部パラメタ）とカメラのパラメタ（内部パラメタ）を調整することである。 ※設定詳細は、「Autoware 自動運転ソフトウェア入門」P129参照 "}}